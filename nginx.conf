# Main API server
server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    http2                   on;
    server_name             bee-srv.me;

    # SSL
    ssl_certificate         /etc/letsencrypt/live/bee-srv.me/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/bee-srv.me/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/bee-srv.me/chain.pem;

    # security
    include                 nginxconfig.io/security.conf;

    # logging
    access_log              /var/log/nginx/access.log combined buffer=512k flush=1m;
    error_log               /var/log/nginx/error.log warn;

    # Block documentation paths
    location ^~ /en/ {
        return 404;
    }

    location ^~ /et/ {
        return 404;
    }

    # reverse proxy
    location / {
        proxy_pass            http://127.0.0.1:3000;
        proxy_set_header Host $host;
        include               nginxconfig.io/proxy.conf;
    }

    # additional config
    include nginxconfig.io/general.conf;
}

# Swagger documentation server
server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    http2                   on;
    server_name             docs.bee-srv.me;

    # SSL
    ssl_certificate         /etc/letsencrypt/live/bee-srv.me/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/bee-srv.me/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/bee-srv.me/chain.pem;

    # security
    include                 nginxconfig.io/security.conf;

    # logging
    access_log              /var/log/nginx/docs-access.log combined buffer=512k flush=1m;
    error_log               /var/log/nginx/docs-error.log warn;

    # Serve English docs by default
    location = / {
        return 301 /en/;
    }

    # Documentation routes
    location /en/ {
        proxy_pass            http://127.0.0.1:3000/en/;
        proxy_set_header Host $host;
        include               nginxconfig.io/proxy.conf;
    }

    location /et/ {
        proxy_pass            http://127.0.0.1:3000/et/;
        proxy_set_header Host $host;
        include               nginxconfig.io/proxy.conf;
    }

    # Serve YAML files directly
    location = /en/openapi.yaml {
        alias /path/to/your/app/docs/en/openapi.yaml;  # Update this path
        default_type application/yaml;
        add_header Access-Control-Allow-Origin 'https://docs.bee-srv.me' always;
        add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Content-Type' always;
    }

    location = /et/openapi.yaml {
        alias /path/to/your/app/docs/et/openapi.yaml;  # Update this path
        default_type application/yaml;
        add_header Access-Control-Allow-Origin 'https://docs.bee-srv.me' always;
        add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Content-Type' always;
    }

    # Block all other paths to prevent API access through docs subdomain
    location / {
        return 404;
    }

    # additional config
    include nginxconfig.io/general.conf;
}

# subdomains redirect (excluding docs subdomain)
server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    http2                   on;
    server_name             *.bee-srv.me;

    # SSL
    ssl_certificate         /etc/letsencrypt/live/bee-srv.me/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/bee-srv.me/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/bee-srv.me/chain.pem;

    # Don't redirect docs subdomain
    if ($host !~* ^docs\.bee-srv\.me$) {
        return 301 https://bee-srv.me$request_uri;
    }
}

# HTTP redirect
server {
    listen      80;
    listen      [::]:80;
    server_name .bee-srv.me;
    include     nginxconfig.io/letsencrypt.conf;

    location / {
        return 301 https://bee-srv.me$request_uri;
    }
}
