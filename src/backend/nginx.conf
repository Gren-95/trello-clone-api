# Main server - Frontend and API
server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    http2                   on;
    server_name             bee-srv.me;
    # SSL
    ssl_certificate         /etc/letsencrypt/live/bee-srv.me-0001/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/bee-srv.me-0001/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/bee-srv.me-0001/chain.pem;
    # security
    include                 nginxconfig.io/security.conf;
    # logging
    access_log              /var/log/nginx/access.log combined buffer=512k flush=1m;
    error_log               /var/log/nginx/error.log warn;
    
    # API routes
    location /api/ {
        proxy_pass            http://127.0.0.1:3066/;
        proxy_set_header Host $host;
        include               nginxconfig.io/proxy.conf;
        
        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # Handle OPTIONS method for CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # Frontend routes - serve static files from built frontend
    location / {
        root /home/ghost/Documents/Code/Vikk/trello-clone-api/src/frontend/dist;
        try_files $uri $uri/ /index.html;
        
        # Add security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Handle static assets with proper caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    # additional config
    include nginxconfig.io/general.conf;
}

# Swagger documentation server
server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    http2                   on;
    server_name             docs.bee-srv.me;
    # SSL
    ssl_certificate         /etc/letsencrypt/live/bee-srv.me-0001/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/bee-srv.me-0001/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/bee-srv.me-0001/chain.pem;
    # security
    include                 nginxconfig.io/security.conf;
    # logging
    access_log              /var/log/nginx/docs-access.log combined buffer=512k flush=1m;
    error_log               /var/log/nginx/docs-error.log warn;
    # Serve English docs by default
    location = / {
        return 301 /en/;
    }
    # Serve YAML files directly from root
    location = /openapi-en.yaml {
        root /public/trello-clone-api;  # Update this to your project root
        try_files /docs/en/openapi.yaml =404;
        default_type application/yaml;
        add_header Access-Control-Allow-Origin '*' always;
        add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Content-Type' always;
    }
    location = /openapi-et.yaml {
        root /public/trello-clone-api;  # Update this to your project root
        try_files /docs/et/openapi.yaml =404;
        default_type application/yaml;
        add_header Access-Control-Allow-Origin '*' always;
        add_header Access-Control-Allow-Methods 'GET, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Content-Type' always;
    }
    # Documentation routes
    location /en/ {
        proxy_pass            http://127.0.0.1:3066/en/;
        proxy_set_header Host $host;
        include               nginxconfig.io/proxy.conf;
        
        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        # Handle OPTIONS method for CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    location /et/ {
        proxy_pass            http://127.0.0.1:3066/et/;
        proxy_set_header Host $host;
        include               nginxconfig.io/proxy.conf;
        
        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        # Handle OPTIONS method for CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    # Block all other paths to prevent API access through docs subdomain
    location / {
        return 404;
    }
    # additional config
    include nginxconfig.io/general.conf;
}

# bank
server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    http2                   on;
    server_name             bank.bee-srv.me;
    # SSL
    ssl_certificate         /etc/letsencrypt/live/bee-srv.me-0001/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/bee-srv.me-0001/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/bee-srv.me-0001/chain.pem;
    # security
    include                 nginxconfig.io/security.conf;
    # logging
    access_log              /var/log/nginx/bank-access.log combined buffer=512k flush=1m;
    error_log               /var/log/nginx/bank-error.log warn;
    # Add HSTS header for security
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    # reverse proxy
    location / {
        proxy_pass            http://127.0.0.1:9000;
        proxy_set_header Host $host;
        include               nginxconfig.io/proxy.conf;
        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        # Handle OPTIONS method for CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    # additional config
    include nginxconfig.io/general.conf;
}

# subdomains redirect (excluding docs and bank subdomains)
server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    http2                   on;
    server_name             *.bee-srv.me;
    # SSL
    ssl_certificate         /etc/letsencrypt/live/bee-srv.me-0001/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/bee-srv.me-0001/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/bee-srv.me-0001/chain.pem;
    # Don't redirect docs and bank subdomains
    if ($host !~* ^(docs|bank)\.bee-srv\.me$) {
        return 301 https://bee-srv.me$request_uri;
    }
}

# HTTP redirect
server {
    listen      80;
    listen      [::]:80;
    server_name .bee-srv.me;
    include     nginxconfig.io/letsencrypt.conf;
    location / {
        return 301 https://bee-srv.me$request_uri;
    }
}